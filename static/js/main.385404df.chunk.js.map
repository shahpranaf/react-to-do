{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","TodoItems.js","Todo.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TodoItems","props","handleEditing","event","setState","editText","target","value","handleEditClear","index","handleFocus","handleBlur","e","currentTarget","contains","relatedTarget","createTasks","item","badgeClass","priority","role","aria-label","className","cursor","done","editing","onFocus","defaultChecked","selected","onChange","handleSelected","id","type","htmlFor","onBlur","autoComplete","name","state","text","ref","input","focus","placeholder","onClick","handleEditSubmit","onDoubleClick","handleEdit","handleComplete","handleDelete","key","listItems","this","entries","map","style","position","Component","INITIAL_TASK","Todo","componentDidMount","window","addEventListener","componentCleanup","list","JSON","parse","localStorage","getItem","handleSubmit","preventDefault","newList","concat","newTask","Date","now","handlenewTask","lists","filter","i","handleSelectCount","handleKeyDown","keyCode","prevState","document","getElementById","length","itemIndexArr","forEach","itemIndex","selectCount","blurIndex","updateIndex","console","log","getForm","onSubmit","data-testid","disabled","componentWillUnmount","removeEventListener","setItem","stringify","isEdit","edit","onKeyDown","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.385404df.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\r\nimport \"./Todo.css\";\r\n\r\nclass TodoItems extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\teditText : \"\"\r\n\t\t}\r\n\t}\r\n\r\n\thandleEditing = (event) => {\r\n\t\tthis.setState({editText: event.target.value})\r\n\t}\r\n\r\n\thandleEditClear = (index) => {\r\n\t\tthis.setState({'editText': ''})\r\n\t\tthis.props.handleFocus(-1, index)\r\n\t}\r\n\r\n\thandleBlur = (e, index) => {\r\n\t\t// if (e.currentTarget === e.target) {\r\n\t\t// \tconsole.log('unfocused self');\r\n\t\t// } else {\r\n\t\t// \tconsole.log('unfocused child', e.target);\r\n\t\t// }\r\n\t\tif (!e.currentTarget.contains(e.relatedTarget)) {\r\n\t\t\tthis.handleEditClear(index)\r\n\t\t}\r\n\t}\r\n\r\n\tcreateTasks = (item, index) => {\r\n        const badgeClass = item.priority === 'high' ? 'danger' : item.priority === 'medium' ? 'warning' : 'info'\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<li role=\"list-item\" aria-label={`list${index}`}\r\n\t\t\t\tclassName={`list-group-item ${this.props.cursor === index ? 'active' : null} ${!item.done ? null : 'mark-done'}`} \r\n\t\t\t\tkey={item.key}\r\n\t\t\t\t>\r\n\r\n\t\t\t\t{/* <div className={`todo-indicator bg-${badgeClass}`}></div> */}\r\n\t\t\t\t<div className={`todo-content p-0 `}>\r\n\r\n\t\t\t\t\t<div className=\"todo-content-wrapper\">\r\n\t\t\t\t\t\t<div className={`todo-content-left mr-2 ${ item.editing ? 'blur-on-edit' : ''}`}>\r\n\t\t\t\t\t\t\t<div className=\"custom-checkbox custom-control\">\r\n\t\t\t\t\t\t\t\t<input aria-label=\"selectTask\" onFocus={() => this.props.handleFocus(index)} className=\"custom-control-input\" defaultChecked={item.selected} onChange={() => this.props.handleSelected(index)} id={`check${index}`} type=\"checkbox\" />\r\n\t\t\t\t\t\t\t\t<label className=\"custom-control-label\" htmlFor={`check${index}`}>\r\n\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div onBlur={(e) => this.handleBlur(e, index) } id={`editTask${index}`} className={`edit-task justify-content-between form-inline row ${ !item.editing ? 'd-none' : ''}`}>\r\n\t\t\t\t\t\t\t<input autoComplete=\"off\" name=\"editText\" value={this.state.editText !== '' ? this.state.editText : item.text} \r\n\t\t\t\t\t\t\t\tref ={(input) => {input && input.focus()}}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Task\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleEditing} \r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\trole=\"editTask\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button aria-label=\"editTaskOk\" onClick={() => this.props.handleEditSubmit(index, this.state.editText)} className=\"btn-transition btn btn-sm text-success mr-1\">\r\n\t\t\t\t\t\t\t\t<i className={`fa fa-check`}></i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button aria-label=\"editTaskClose\" onClick={() => this.handleEditClear(index)} className=\"btn-transition btn btn-sm text-danger mr-1\">\r\n\t\t\t\t\t\t\t\t<i className={`fa fa-close`}></i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div role=\"todoText\" onDoubleClick = {() => this.props.handleEdit(index)}  className={`todo-content-left col-md-5 ${ item.editing ? 'blur-on-edit' : ''}`}>\r\n\t\t\t\t\t\t\t<div className=\"todo-heading\" >\r\n\t\t\t\t\t\t\t\t<span aria-label=\"taskText\" >{item.text}</span>\r\n                                <div aria-label= \"priority\" className={`badge ml-2 badge-${badgeClass}` }>\r\n                                        {item.priority}\r\n                                </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={`todo-content-right ${ item.editing ? 'blur-on-edit' : ''}`} onFocus={() => this.props.handleFocus(index)}>\r\n\t\t\t\t\t\t\t<button onClick={() => this.props.handleComplete([index])} className=\"btn-transition btn btn-done mr-1\">\r\n\t\t\t\t\t\t\t\t<i className={`fa fa-check ${item.done ? null : 'invisible'}`}></i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button aria-label={`delete${index}`} onClick={() => this.props.handleDelete(index)} className=\"border-0 btn-transition btn btn-outline-danger\">\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-trash\"></i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t);\r\n\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst listItems = this.props.entries.map(this.createTasks);\r\n\t\treturn (\r\n\t\t\t<div className=\"scroll-area-sm\">\r\n\t\t\t\t<perfect-scrollbar className=\"ps-show-limits\">\r\n\t\t\t\t\t<div style={{ position: \"static\" }} className=\"ps ps--active-y\">\r\n\t\t\t\t\t\t<div className=\"ps-content\">\r\n\t\t\t\t\t\t\t<ul role=\"list\" className=\" list-group list-group-flush\">\r\n                                {listItems}\r\n                            </ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</perfect-scrollbar>\r\n\t\t\t</div>\r\n\r\n\t\t\t//   <ul className=\"todo-list\">\r\n\t\t\t//       {listItems}\r\n\t\t\t//   </ul>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoItems;\r\n","import React, { Component } from \"react\";\r\nimport TodoItems from \"./TodoItems\";\r\n\r\nconst INITIAL_TASK = {\r\n    key: \"\",\r\n    text: \"\",\r\n    done: false,\r\n    priority: \"low\",\r\n    selected: false,\r\n    editing: false\r\n}\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectCount = 0;\r\n        this.state = {\r\n            newTask: INITIAL_TASK,\r\n            list : [],\r\n            cursor: -1,\r\n            isEdit: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.addEventListener('beforeunload', this.componentCleanup);\r\n        this.setState({list: JSON.parse(localStorage.getItem('todo') ) || []});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newList = [...this.state.list].concat({\r\n            ...this.state.newTask,\r\n            key: Date.now()\r\n        } )\r\n\r\n        this.setState({list: newList, newTask: INITIAL_TASK})\r\n    }\r\n\r\n    handlenewTask = e => {\r\n        const { name, value } = e.target;\r\n\r\n        if(name === 'newTask') {\r\n            this.setState({\r\n                newTask: {\r\n                    ...this.state.newTask,\r\n                    text: value\r\n                } \r\n            } );\r\n        } else if (name === \"priority\") {\r\n            this.setState({\r\n                newTask: {\r\n                    ...this.state.newTask,\r\n                    priority: value\r\n                } \r\n            } );\r\n        }\r\n        \r\n    };\r\n\r\n    handleDelete = (index=-1) => {\r\n        let lists = [...this.state.list];\r\n\r\n        if(index >= 0) {\r\n            lists = lists.filter((item, i) => index !== i)\r\n        } else {\r\n            lists = lists.filter((item) => !item.selected)\r\n        }\r\n\r\n        this.setState({ list: lists})\r\n        this.handleSelectCount(lists)\r\n        \r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        const { cursor, list } = this.state\r\n        // arrow up/down button should select next/previous list element\r\n        if ((e.keyCode === 38 || e.keyCode === 37) && cursor > 0) {\r\n            e.target.focus()\r\n          this.setState( prevState => ({\r\n            cursor: prevState.cursor - 1\r\n          },\r\n          document.getElementById(`check${prevState.cursor - 1}`).focus()\r\n          ))\r\n        } else if ((e.keyCode === 40 || e.keyCode === 39) && cursor < list.length - 1) {\r\n            e.target.focus()\r\n          this.setState( prevState => ({\r\n            cursor: prevState.cursor + 1\r\n          },\r\n            document.getElementById(`check${prevState.cursor + 1}`).focus()\r\n          ))\r\n        }\r\n      };\r\n\r\n    handleComplete = (itemIndexArr) => {\r\n        let lists = [...this.state.list];\r\n        itemIndexArr.forEach(i => {\r\n            lists[i].done = !lists[i].done\r\n        });\r\n\r\n        lists = lists.filter(list => !list.done).concat(lists.filter(list => list.done))\r\n        this.setState({ list: lists })\r\n    };\r\n\r\n    handleSelected = (itemIndex) => {\r\n        const lists = [...this.state.list];\r\n        lists[itemIndex].selected = !lists[itemIndex].selected\r\n        \r\n        this.setState({ list: lists })\r\n\r\n        this.handleSelectCount(lists)\r\n    };\r\n\r\n    handleSelectCount = (lists) => {\r\n        this.selectCount = lists.filter(list => list.selected).length\r\n    };\r\n\r\n    handleFocus = (index, blurIndex=-1) => {\r\n        // document.getElementById(`check${index}`).focus();\r\n        this.setState({cursor: index})\r\n        const updateIndex = blurIndex >= 0 ? blurIndex : index  \r\n        if(updateIndex >= 0) {\r\n            const lists = [...this.state.list];\r\n            lists[updateIndex].editing = false;\r\n            this.setState({ list: lists });\r\n        }\r\n    }\r\n\r\n    handleEdit = (itemIndex) => {\r\n        console.log('edit=====')\r\n        const lists = [...this.state.list];\r\n        lists[itemIndex].editing = true;\r\n        // document.getElementById(`check${index}`).focus();\r\n        this.setState({ list: lists });\r\n        return true;\r\n    }\r\n\r\n    handleEditSubmit = (index, editText) => {\r\n        if(!editText) \r\n            return;\r\n        const lists = [...this.state.list];\r\n        lists[index] = {\r\n            ...lists[index],\r\n            text: editText,\r\n            editing: false\r\n        };\r\n        // document.getElementById(`check${index}`).focus();\r\n        this.setState({ list: lists });\r\n    }\r\n\r\n    getForm = (newTask) => (\r\n        <form className=\"col-md-8 form-inline mb-2 row justify-content-between\" onSubmit={this.handleSubmit}>\r\n                    <input data-testid=\"newTask\" autoComplete=\"off\" name=\"newTask\" value={newTask.text} \r\n                        placeholder=\"Enter Task\"\r\n                        onChange={this.handlenewTask} \r\n                        className=\"form-control col-md-7\"\r\n                    />\r\n                    <select data-testid=\"priority\" name=\"priority\" value={newTask.priority} \r\n                        onChange={this.handlenewTask} className=\"form-control col-md-2\">\r\n                        <option value=\"low\">Low</option>\r\n                        <option value=\"medium\">Medium</option>\r\n                        <option  value=\"high\">High</option>\r\n                    </select>\r\n                    <button disabled={newTask.text === \"\"} data-testid=\"add-button\" className=\"btn btn-primary col-md-2 float-right\" type=\"submit\">Add</button>\r\n                </form>\r\n    )\r\n\r\n    render() {\r\n        const {newTask, list, edit} = this.state;\r\n\t\treturn (\r\n            \r\n            <div className=\"row d-flex justify-content-center\" onKeyDown={this.handleKeyDown}>\r\n                <h1 className=\"col-md-8 text-center\"> What To Do ? </h1>\r\n                {this.getForm(newTask)}\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-hover-shadow-2x mb-3 card\">\r\n                        <div className=\"card-header-tab card-header\">\r\n                            <div className=\"card-header-title font-size-lg text-capitalize font-weight-normal\"><i className=\"fa fa-tasks\"></i>&nbsp;Task Lists</div>\r\n                            \r\n                        </div>\r\n                        <TodoItems entries={list} \r\n                            handleDelete={this.handleDelete} \r\n                            cursor={this.state.cursor}\r\n                            handleComplete = {this.handleComplete}\r\n                            handleSelected = {this.handleSelected}\r\n                            handleFocus = {this.handleFocus}\r\n                            handleEdit = {this.handleEdit}\r\n                            handleEditSubmit = {this.handleEditSubmit}\r\n                            edit = {edit}\r\n                        />\r\n                       \r\n                        <div className=\"d-inline-block d-flex card-footer\">\r\n                            <span className=\"text-left col-md-6\">\r\n                                {this.selectCount} Selected\r\n                            </span>\r\n                            <div className=\"text-right col-md-6\">\r\n                                <button aria-label=\"deleteAll\" onClick={this.handleDelete} className={`btn btn-danger ${!this.selectCount ? 'invisible' : ''  }`}>Delete</button>\r\n                            </div>\r\n                            {/* <button className=\"mr-2 btn btn-link btn-sm\">Cancel</button> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\t\t);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.componentCleanup();\r\n        window.removeEventListener('beforeunload', this.componentCleanup); // remove the event handler for normal unmounting\r\n    }\r\n    \r\n    componentCleanup = () => {\r\n        this.state.list.map(list => {\r\n            list.selected = false;\r\n            list.editing = false;\r\n            return list\r\n        })\r\n        localStorage.setItem('todo', JSON.stringify(this.state.list) || [])\r\n    }\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Todo from './Todo';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Todo />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}